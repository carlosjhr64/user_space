#! ruby
require 'test/unit'
require 'stringio'

module Capture
  def self.stderr
    out = StringIO.new
    $stderr = out
    yield
    return out.string
  ensure
    $stderr = STDERR
  end
end

class TestConstants < Test::Unit::TestCase


  def test_constants
    verbose, $VERBOSE = $VERBOSE, true
    assert_nothing_raised() do

      msg = Capture.stderr{require 'user_space/user_space'}
      assert_match(/Marshal/, msg)

      opt = UserSpace::OPTIONS
      assert_equal 'config', opt[:config]
      assert_equal 'VERSION', opt[:version]
      assert_equal nil, opt[:ext]
      assert_equal Marshal, opt[:parser]

      par = UserSpace::PARAMETERS
      assert_equal File.basename($0), par[:appname]
      assert_equal ['CACHE','CONFIG','DATA'], par[:xdgbases]
      assert_nil par[:appdir]

    end
    $VERBOSE = verbose
  end
end
